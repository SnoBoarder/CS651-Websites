#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdventureWorks2000")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertEmployee(Employee instance);
  partial void UpdateEmployee(Employee instance);
  partial void DeleteEmployee(Employee instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Aw2k"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Employee> Employees
	{
		get
		{
			return this.GetTable<Employee>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmployeeID;
	
	private string _FirstName;
	
	private System.Nullable<int> _AddressID;
	
	private System.Nullable<byte> _ShiftID;
	
	private string _LastName;
	
	private string _MiddleName;
	
	private bool _NameStyle;
	
	private string _NationalIDNumber;
	
	private string _Title;
	
	private System.Nullable<System.DateTime> _HireDate;
	
	private System.Nullable<System.DateTime> _BirthDate;
	
	private string _LoginID;
	
	private string _EmailAddress;
	
	private System.Nullable<short> _DepartmentID;
	
	private System.Nullable<char> _MaritalStatus;
	
	private string _EmergencyContactName;
	
	private string _EmergencyContactPhone;
	
	private bool _SalariedFlag;
	
	private System.Nullable<char> _Gender;
	
	private System.Nullable<int> _ManagerID;
	
	private System.Nullable<byte> _PayFrequency;
	
	private System.Nullable<decimal> _BaseRate;
	
	private short _VacationHours;
	
	private short _SickLeaveHours;
	
	private bool _SalesPersonFlag;
	
	private bool _CurrentFlag;
	
	private System.DateTime _ModifiedDate;
	
	private System.Guid _rowguid;
	
	private EntitySet<Employee> _Employees;
	
	private EntityRef<Employee> _Employee1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnAddressIDChanging(System.Nullable<int> value);
    partial void OnAddressIDChanged();
    partial void OnShiftIDChanging(System.Nullable<byte> value);
    partial void OnShiftIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnNameStyleChanging(bool value);
    partial void OnNameStyleChanged();
    partial void OnNationalIDNumberChanging(string value);
    partial void OnNationalIDNumberChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnLoginIDChanging(string value);
    partial void OnLoginIDChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnDepartmentIDChanging(System.Nullable<short> value);
    partial void OnDepartmentIDChanged();
    partial void OnMaritalStatusChanging(System.Nullable<char> value);
    partial void OnMaritalStatusChanged();
    partial void OnEmergencyContactNameChanging(string value);
    partial void OnEmergencyContactNameChanged();
    partial void OnEmergencyContactPhoneChanging(string value);
    partial void OnEmergencyContactPhoneChanged();
    partial void OnSalariedFlagChanging(bool value);
    partial void OnSalariedFlagChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnManagerIDChanging(System.Nullable<int> value);
    partial void OnManagerIDChanged();
    partial void OnPayFrequencyChanging(System.Nullable<byte> value);
    partial void OnPayFrequencyChanged();
    partial void OnBaseRateChanging(System.Nullable<decimal> value);
    partial void OnBaseRateChanged();
    partial void OnVacationHoursChanging(short value);
    partial void OnVacationHoursChanged();
    partial void OnSickLeaveHoursChanging(short value);
    partial void OnSickLeaveHoursChanged();
    partial void OnSalesPersonFlagChanging(bool value);
    partial void OnSalesPersonFlagChanged();
    partial void OnCurrentFlagChanging(bool value);
    partial void OnCurrentFlagChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    #endregion
	
	public Employee()
	{
		this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
		this._Employee1 = default(EntityRef<Employee>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int")]
	public System.Nullable<int> AddressID
	{
		get
		{
			return this._AddressID;
		}
		set
		{
			if ((this._AddressID != value))
			{
				this.OnAddressIDChanging(value);
				this.SendPropertyChanging();
				this._AddressID = value;
				this.SendPropertyChanged("AddressID");
				this.OnAddressIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="TinyInt")]
	public System.Nullable<byte> ShiftID
	{
		get
		{
			return this._ShiftID;
		}
		set
		{
			if ((this._ShiftID != value))
			{
				this.OnShiftIDChanging(value);
				this.SendPropertyChanging();
				this._ShiftID = value;
				this.SendPropertyChanged("ShiftID");
				this.OnShiftIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
	public string MiddleName
	{
		get
		{
			return this._MiddleName;
		}
		set
		{
			if ((this._MiddleName != value))
			{
				this.OnMiddleNameChanging(value);
				this.SendPropertyChanging();
				this._MiddleName = value;
				this.SendPropertyChanged("MiddleName");
				this.OnMiddleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="Bit NOT NULL")]
	public bool NameStyle
	{
		get
		{
			return this._NameStyle;
		}
		set
		{
			if ((this._NameStyle != value))
			{
				this.OnNameStyleChanging(value);
				this.SendPropertyChanging();
				this._NameStyle = value;
				this.SendPropertyChanged("NameStyle");
				this.OnNameStyleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalIDNumber", DbType="NVarChar(15)")]
	public string NationalIDNumber
	{
		get
		{
			return this._NationalIDNumber;
		}
		set
		{
			if ((this._NationalIDNumber != value))
			{
				this.OnNationalIDNumberChanging(value);
				this.SendPropertyChanging();
				this._NationalIDNumber = value;
				this.SendPropertyChanged("NationalIDNumber");
				this.OnNationalIDNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> HireDate
	{
		get
		{
			return this._HireDate;
		}
		set
		{
			if ((this._HireDate != value))
			{
				this.OnHireDateChanging(value);
				this.SendPropertyChanging();
				this._HireDate = value;
				this.SendPropertyChanged("HireDate");
				this.OnHireDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> BirthDate
	{
		get
		{
			return this._BirthDate;
		}
		set
		{
			if ((this._BirthDate != value))
			{
				this.OnBirthDateChanging(value);
				this.SendPropertyChanging();
				this._BirthDate = value;
				this.SendPropertyChanged("BirthDate");
				this.OnBirthDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginID", DbType="NVarChar(256)")]
	public string LoginID
	{
		get
		{
			return this._LoginID;
		}
		set
		{
			if ((this._LoginID != value))
			{
				this.OnLoginIDChanging(value);
				this.SendPropertyChanging();
				this._LoginID = value;
				this.SendPropertyChanged("LoginID");
				this.OnLoginIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50)")]
	public string EmailAddress
	{
		get
		{
			return this._EmailAddress;
		}
		set
		{
			if ((this._EmailAddress != value))
			{
				this.OnEmailAddressChanging(value);
				this.SendPropertyChanging();
				this._EmailAddress = value;
				this.SendPropertyChanged("EmailAddress");
				this.OnEmailAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="SmallInt")]
	public System.Nullable<short> DepartmentID
	{
		get
		{
			return this._DepartmentID;
		}
		set
		{
			if ((this._DepartmentID != value))
			{
				this.OnDepartmentIDChanging(value);
				this.SendPropertyChanging();
				this._DepartmentID = value;
				this.SendPropertyChanged("DepartmentID");
				this.OnDepartmentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NChar(1)")]
	public System.Nullable<char> MaritalStatus
	{
		get
		{
			return this._MaritalStatus;
		}
		set
		{
			if ((this._MaritalStatus != value))
			{
				this.OnMaritalStatusChanging(value);
				this.SendPropertyChanging();
				this._MaritalStatus = value;
				this.SendPropertyChanged("MaritalStatus");
				this.OnMaritalStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactName", DbType="NVarChar(50)")]
	public string EmergencyContactName
	{
		get
		{
			return this._EmergencyContactName;
		}
		set
		{
			if ((this._EmergencyContactName != value))
			{
				this.OnEmergencyContactNameChanging(value);
				this.SendPropertyChanging();
				this._EmergencyContactName = value;
				this.SendPropertyChanged("EmergencyContactName");
				this.OnEmergencyContactNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyContactPhone", DbType="NVarChar(25)")]
	public string EmergencyContactPhone
	{
		get
		{
			return this._EmergencyContactPhone;
		}
		set
		{
			if ((this._EmergencyContactPhone != value))
			{
				this.OnEmergencyContactPhoneChanging(value);
				this.SendPropertyChanging();
				this._EmergencyContactPhone = value;
				this.SendPropertyChanged("EmergencyContactPhone");
				this.OnEmergencyContactPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalariedFlag", DbType="Bit NOT NULL")]
	public bool SalariedFlag
	{
		get
		{
			return this._SalariedFlag;
		}
		set
		{
			if ((this._SalariedFlag != value))
			{
				this.OnSalariedFlagChanging(value);
				this.SendPropertyChanging();
				this._SalariedFlag = value;
				this.SendPropertyChanged("SalariedFlag");
				this.OnSalariedFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(1)")]
	public System.Nullable<char> Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerID", DbType="Int")]
	public System.Nullable<int> ManagerID
	{
		get
		{
			return this._ManagerID;
		}
		set
		{
			if ((this._ManagerID != value))
			{
				if (this._Employee1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnManagerIDChanging(value);
				this.SendPropertyChanging();
				this._ManagerID = value;
				this.SendPropertyChanged("ManagerID");
				this.OnManagerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFrequency", DbType="TinyInt")]
	public System.Nullable<byte> PayFrequency
	{
		get
		{
			return this._PayFrequency;
		}
		set
		{
			if ((this._PayFrequency != value))
			{
				this.OnPayFrequencyChanging(value);
				this.SendPropertyChanging();
				this._PayFrequency = value;
				this.SendPropertyChanged("PayFrequency");
				this.OnPayFrequencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseRate", DbType="Money")]
	public System.Nullable<decimal> BaseRate
	{
		get
		{
			return this._BaseRate;
		}
		set
		{
			if ((this._BaseRate != value))
			{
				this.OnBaseRateChanging(value);
				this.SendPropertyChanging();
				this._BaseRate = value;
				this.SendPropertyChanged("BaseRate");
				this.OnBaseRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacationHours", DbType="SmallInt NOT NULL")]
	public short VacationHours
	{
		get
		{
			return this._VacationHours;
		}
		set
		{
			if ((this._VacationHours != value))
			{
				this.OnVacationHoursChanging(value);
				this.SendPropertyChanging();
				this._VacationHours = value;
				this.SendPropertyChanged("VacationHours");
				this.OnVacationHoursChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SickLeaveHours", DbType="SmallInt NOT NULL")]
	public short SickLeaveHours
	{
		get
		{
			return this._SickLeaveHours;
		}
		set
		{
			if ((this._SickLeaveHours != value))
			{
				this.OnSickLeaveHoursChanging(value);
				this.SendPropertyChanging();
				this._SickLeaveHours = value;
				this.SendPropertyChanged("SickLeaveHours");
				this.OnSickLeaveHoursChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonFlag", DbType="Bit NOT NULL")]
	public bool SalesPersonFlag
	{
		get
		{
			return this._SalesPersonFlag;
		}
		set
		{
			if ((this._SalesPersonFlag != value))
			{
				this.OnSalesPersonFlagChanging(value);
				this.SendPropertyChanging();
				this._SalesPersonFlag = value;
				this.SendPropertyChanged("SalesPersonFlag");
				this.OnSalesPersonFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentFlag", DbType="Bit NOT NULL")]
	public bool CurrentFlag
	{
		get
		{
			return this._CurrentFlag;
		}
		set
		{
			if ((this._CurrentFlag != value))
			{
				this.OnCurrentFlagChanging(value);
				this.SendPropertyChanging();
				this._CurrentFlag = value;
				this.SendPropertyChanged("CurrentFlag");
				this.OnCurrentFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
	public System.DateTime ModifiedDate
	{
		get
		{
			return this._ModifiedDate;
		}
		set
		{
			if ((this._ModifiedDate != value))
			{
				this.OnModifiedDateChanging(value);
				this.SendPropertyChanging();
				this._ModifiedDate = value;
				this.SendPropertyChanged("ModifiedDate");
				this.OnModifiedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid rowguid
	{
		get
		{
			return this._rowguid;
		}
		set
		{
			if ((this._rowguid != value))
			{
				this.OnrowguidChanging(value);
				this.SendPropertyChanging();
				this._rowguid = value;
				this.SendPropertyChanged("rowguid");
				this.OnrowguidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employees", ThisKey="EmployeeID", OtherKey="ManagerID")]
	public EntitySet<Employee> Employees
	{
		get
		{
			return this._Employees;
		}
		set
		{
			this._Employees.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee1", ThisKey="ManagerID", OtherKey="EmployeeID", IsForeignKey=true)]
	public Employee Employee1
	{
		get
		{
			return this._Employee1.Entity;
		}
		set
		{
			Employee previousValue = this._Employee1.Entity;
			if (((previousValue != value) 
						|| (this._Employee1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Employee1.Entity = null;
					previousValue.Employees.Remove(this);
				}
				this._Employee1.Entity = value;
				if ((value != null))
				{
					value.Employees.Add(this);
					this._ManagerID = value.EmployeeID;
				}
				else
				{
					this._ManagerID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Employee1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Employees(Employee entity)
	{
		this.SendPropertyChanging();
		entity.Employee1 = this;
	}
	
	private void detach_Employees(Employee entity)
	{
		this.SendPropertyChanging();
		entity.Employee1 = null;
	}
}
#pragma warning restore 1591
